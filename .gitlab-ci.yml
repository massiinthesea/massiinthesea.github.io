variables:
    DIST_DIR: dist/taurus-challenge
    # IMAGE: registry.heroku.com/taurus-challenge/web

services:
    - docker:dind

stages:
    - install
    - test
    - build
    # - deploy

install:
    stage: install
    image: node:11-alpine
    script:
        - npm install
    only:
        - master
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules/
            - dist/

test:
    stage: test
    image: markhobson/node-chrome:latest
    script:
        - npm link @angular/cli@11.0.0
        - npm test -- --browsers=ChromeHeadless --watch=false
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules

build:
    stage: build
    image: node:11-alpine
    script:
        # - npm link @angular/cli@11.0.0
        - npm run build
    artifacts:
        paths:
            - $CI_PROJECT_DIR/dist
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules

# deploy:
#     stage: deploy
#     image: docker:stable
#     dependencies: 
#         - build
#     variables:
#         DOCKER_HOST: tcp://docker:2375/
#         DOCKER_DRIVER: overlay
#     before_script: ["cd taurus-challenge"]
#     script:
#         - docker build -t $IMAGE .
#         - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
#         - docker push $IMAGE
#         - IMAGE_ID=$(docker inspect ${IMAGE} --format={{.Id}})
#         - apk add curl
#         - >
#             curl -Ssl -X PATCH https://api.heroku.com/apps/angular-quality/formation
#             -d "{ \"updates\": [ {
#             \"type\": \"web\",
#             \"docker_image\": \"${IMAGE_ID}\" } ] }"
#             -H "Content-Type: application/json"
#             -H "Authorization: Bearer ${HEROKU_API_KEY}"
#             -H "Accept: application/vnd.heroku+json; version=3.docker-releases"
#     tags:
#         - docker
